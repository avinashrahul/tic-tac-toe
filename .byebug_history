exit
result
c
exit
@roman_hash[(number - 5) * decimal]
@roman_hash[5 * decimal]
@roman_hash[5 * decimal] + @roman_hash[(number - 5) * decimal]
n
decimal
number
n
result
n
@roman_hash[5 * decimal] + @roman_hash[(number - 5) * decimal]
n
decimal
number
c
exit
decimal
number
c
exit
number
c
decimal
number
exit
decimal
number
c
exit
667%100
667/100
667 % 100
667 / 100
67 % 100
67 % 10
decimal
number
n
c
exit
=exit
cexit
@roman_hash[5 * decimal] + @roman_hash[(number - 5) * decimal]
c
decimal
number
n
calculate_multiple(number, decimal)
number
n
100 > 0
decimal
exit
RN[1]*2
RN[2]*1
2/1
52/1
1 / 10
10 / 10
52/10
52/100
1000/10
52/1000
roman_base
factor
result << multiple_of(factor, roman_base)
factor
n
result
n
roman_base /= 10
dec
n
roman_base
factor
 multiple_of(factor, roman_base)
factor = dec/roman_base
dec
c
exit
board[1]
won?(board)
winning_combo = won?(board)
board
exit
turn_count(board)
board
c
exit
  board.count{|token| token == "X" || token == "O"}
  board.all?{|token| token == "X" || token == "O"}
combo
position_taken?(board, combo[0])
board[combo[0]] == board[combo[1]] && board[combo[1]] == board[combo[2]]
combo[0]
board[combo[0]] == board[combo[1]]
combo
board
